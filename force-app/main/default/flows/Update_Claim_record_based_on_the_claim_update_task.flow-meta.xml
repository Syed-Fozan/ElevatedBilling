<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>assigntoowner</name>
        <label>assigntoowner</label>
        <locationX>2170</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getNeeds_Office_Assistance_Claim.Dental_Office__r.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sevendays</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>DecideClaimOwner</name>
        <label>DecideClaimOwner</label>
        <locationX>1238</locationX>
        <locationY>371</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Needs_VBS_Assistance_Claim</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Needs VBS Assistance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StateSide_VBSS</targetReference>
            </connector>
            <label>Needs VBS Assistance Claim</label>
        </rules>
        <rules>
            <name>userClaim</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Needs VBS Assistance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Needs Office Assistance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Claim_Record</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>userClaim</label>
        </rules>
        <rules>
            <name>Needs_Office_Assistance_Claim</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Needs Office Assistance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Needs_Office_Assistance_Claims</targetReference>
            </connector>
            <label>Needs Office Assistance Claim</label>
        </rules>
    </decisions>
    <decisions>
        <name>DecisionforClaimStatus</name>
        <label>DecisionforClaimStatus</label>
        <locationX>1106</locationX>
        <locationY>587</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>X7daysduedate</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Paid to Member</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Paid but Not Posted</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Duedate7days</targetReference>
            </connector>
            <label>7daysduedate</label>
        </rules>
        <rules>
            <name>X15days</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resubmitted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Processing</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Duedate15days</targetReference>
            </connector>
            <label>15days</label>
        </rules>
        <rules>
            <name>X3days</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Ready for NOS</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Duedatedays</targetReference>
            </connector>
            <label>3days</label>
        </rules>
        <rules>
            <name>X25days</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Appeals</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Duedate25days</targetReference>
            </connector>
            <label>25days</label>
        </rules>
        <rules>
            <name>X20days</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Duedate20days</targetReference>
            </connector>
            <label>20days</label>
        </rules>
        <rules>
            <name>X90days</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Ortho Claim</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Duedate90days</targetReference>
            </connector>
            <label>90days</label>
        </rules>
    </decisions>
    <description>Added task comment, Added due date and Assigned To</description>
    <environments>Default</environments>
    <formulas>
        <name>fifiteendays</name>
        <dataType>Date</dataType>
        <expression>Today()+15</expression>
    </formulas>
    <formulas>
        <name>ninthydays</name>
        <dataType>Date</dataType>
        <expression>Today()+90</expression>
    </formulas>
    <formulas>
        <name>sevendays</name>
        <dataType>Date</dataType>
        <expression>TODAY()+7</expression>
    </formulas>
    <formulas>
        <name>thirtyday</name>
        <dataType>Date</dataType>
        <expression>Today()+30</expression>
    </formulas>
    <formulas>
        <name>threedays</name>
        <dataType>Date</dataType>
        <expression>Today()+3</expression>
    </formulas>
    <formulas>
        <name>Twentydays</name>
        <dataType>Date</dataType>
        <expression>Today()+20</expression>
    </formulas>
    <formulas>
        <name>twentyfivedays</name>
        <dataType>Date</dataType>
        <expression>Today()+25</expression>
    </formulas>
    <interviewLabel>Update Claim record based on the &apos;claim update&apos; task {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Claim record based on the &apos;claim update&apos; task</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetClaimRecord</name>
        <label>GetClaimRecord</label>
        <locationX>50</locationX>
        <locationY>587</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>RessaignTaskToStateSideVBSS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Claim__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getNeeds_Office_Assistance_Claim</name>
        <label>getNeeds Office Assistance Claim</label>
        <locationX>2162</locationX>
        <locationY>587</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assigntoowner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Claim__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Duedate15days</name>
        <label>Duedate15days</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resubmitted</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Processing</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>fifiteendays</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Duedate20days</name>
        <label>Duedate20days</label>
        <locationX>1370</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>Twentydays</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Duedate25days</name>
        <label>Duedate25days</label>
        <locationX>1106</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Appeals</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>twentyfivedays</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Duedate7days</name>
        <label>Duedate7days</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paid to Member</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paid but Not Posted</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>sevendays</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Duedate90days</name>
        <label>Duedate90days</label>
        <locationX>1634</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ortho Claim</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>ninthydays</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Duedatedays</name>
        <label>Duedate3days</label>
        <locationX>842</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ready for NOS</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>threedays</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Needs_Office_Assistance_Claims</name>
        <label>Needs Office Assistance Claim</label>
        <locationX>2162</locationX>
        <locationY>479</locationY>
        <connector>
            <targetReference>getNeeds_Office_Assistance_Claim</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Claim_Worked_By__c</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Due_Date__c</field>
            <value>
                <elementReference>$Record.ActivityDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Follow_Up_Method__c</field>
            <value>
                <elementReference>$Record.Type</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Most_Recent_Status_Note__c</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <elementReference>$Record.Status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Work_Date__c</field>
            <value>
                <elementReference>$Record.CreatedDate</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>RessaignTaskToStateSideVBSS</name>
        <label>RessaignTaskToStateSideVBSS</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetClaimRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Needs VBS Assistance</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>sevendays</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>GetClaimRecord.Dental_Office__r.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <recordUpdates>
        <name>StateSide_VBSS</name>
        <label>StateSide VBS</label>
        <locationX>50</locationX>
        <locationY>479</locationY>
        <connector>
            <targetReference>GetClaimRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Claim_Worked_By__c</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Due_Date__c</field>
            <value>
                <elementReference>$Record.ActivityDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Follow_Up_Method__c</field>
            <value>
                <elementReference>$Record.Type</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Most_Recent_Status_Note__c</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <elementReference>$Record.Status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Work_Date__c</field>
            <value>
                <elementReference>$Record.CreatedDate</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Claim_Record</name>
        <label>Update Claim Record</label>
        <locationX>1106</locationX>
        <locationY>479</locationY>
        <connector>
            <targetReference>DecisionforClaimStatus</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Claim_Worked_By__c</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Due_Date__c</field>
            <value>
                <elementReference>$Record.ActivityDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Follow_Up_Method__c</field>
            <value>
                <elementReference>$Record.Type</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Most_Recent_Status_Note__c</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <elementReference>$Record.Status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Work_Date__c</field>
            <value>
                <elementReference>$Record.CreatedDate</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <start>
        <locationX>1112</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>DecideClaimOwner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
